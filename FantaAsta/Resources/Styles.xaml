<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Default label-->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource NunitoRegular}"/>
    </Style>

    <!--Default text block-->
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource NunitoRegular}"/>
    </Style>

    <!--Default button-->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="White" BorderBrush="Black" BorderThickness="2" CornerRadius="8">
                        <TextBlock x:Name="Content" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray"/>
                            <Setter TargetName="Content" Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="Content" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default combo box-->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Background="White" BorderBrush="Black" Focusable="False" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border" Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ToggleButton}}" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}" BorderThickness="2" CornerRadius="6">
                                        <Path x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Margin="0,0,6,0"/>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
                                    <ControlTemplate.Triggers>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="White" BorderBrush="DarkGray" BorderThickness="2" CornerRadius="0,0,8,8"/>
                                <ScrollViewer Margin="4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="DarkGray"/>
                            <Setter TargetName="ToggleButton" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default combo box item-->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Background="White" CornerRadius="4">
                        <ContentPresenter x:Name="Content" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="DarkGray"/>
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="DarkGray"/>
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default text box-->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border" BorderBrush="Black" BorderThickness="2" Background="White" CornerRadius="6">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default tab control-->
    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Row="0" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                        <Border x:Name="Border" Grid.Row="1" BorderBrush="Black" Background="{TemplateBinding Background}" BorderThickness="2" CornerRadius="0,6,0,0" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default tab item-->
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border" BorderThickness="2" BorderBrush="Black" CornerRadius="8,8,0,0" MinWidth="100" MinHeight="40">
						<ContentPresenter x:Name="Content" ContentSource="Header" TextElement.FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="White"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!--Stile bottoni finestra principale-->
	<Style x:Key="ThreeButtons" TargetType="Button">
		<Setter Property="Background" Value="Gray"/>
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}" CornerRadius="6">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True"/>
					<Condition Property="IsStylusOver" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" Value="LightBlue"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<!--Stile bottone chiusura finestra-->
	<Style x:Key="ExitButton" TargetType="Button" BasedOn="{StaticResource ThreeButtons}">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Content">
			<Setter.Value>
				<Image Stretch="Uniform" Height="12" Width="12">
					<Image.Source>
						<DrawingImage>
							<DrawingImage.Drawing>
								<GeometryDrawing Brush="Black" Geometry="{StaticResource ExitIcon}"/>
							</DrawingImage.Drawing>
						</DrawingImage>
					</Image.Source>
				</Image>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Stile bottone ridimensionamento finestra-->
	<Style x:Key="ResizeButton" TargetType="Button" BasedOn="{StaticResource ThreeButtons}">
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="Maximized">
				<Setter Property="Content">
					<Setter.Value>
						<Image Stretch="Uniform" Height="12" Width="12">
							<Image.Source>
								<DrawingImage>
									<DrawingImage.Drawing>
										<GeometryDrawing Brush="Black" Geometry="{StaticResource MaximizeIcon}"/>
									</DrawingImage.Drawing>
								</DrawingImage>
							</Image.Source>
						</Image>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="Normal">
				<Setter Property="Content">
					<Setter.Value>
						<Image Stretch="Uniform" Height="12" Width="12">
							<Image.Source>
								<DrawingImage>
									<DrawingImage.Drawing>
										<GeometryDrawing Brush="Black" Geometry="{StaticResource RestoreIcon}"/>
									</DrawingImage.Drawing>
								</DrawingImage>
							</Image.Source>
						</Image>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!--Stile bottone riduzione finestra-->
	<Style x:Key="MinimizeButton" TargetType="Button" BasedOn="{StaticResource ThreeButtons}">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Content">
			<Setter.Value>
				<Image Stretch="Uniform" Height="12" Width="12">
					<Image.Source>
						<DrawingImage>
							<DrawingImage.Drawing>
								<GeometryDrawing Brush="Black" Geometry="{StaticResource MinimizeIcon}"/>
							</DrawingImage.Drawing>
						</DrawingImage>
					</Image.Source>
				</Image>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>